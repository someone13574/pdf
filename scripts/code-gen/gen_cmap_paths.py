from pathlib import Path
from collections import defaultdict

asset_dir = Path("assets/cmap-resources")
paths = [path for path in asset_dir.rglob("*/CMap/*") if path.is_file() and path.suffix == ""]

name_to_paths = defaultdict(list)
for path in paths:
    name_to_paths[path.name].append(path)

lookup_fn = """\
/// Translate the name of a cmap into its asset's path. This function was auto-generated by `scripts/code-gen/gen_cmap_paths.py`.
PdfError* pdf_cmap_name_to_path(char* cmap_name, const char** cmap_path_out) {
    RELEASE_ASSERT(cmap_name);
    RELEASE_ASSERT(cmap_path_out);

    """
for name in name_to_paths:
    n_paths = len(name_to_paths[name])
    if n_paths > 1:
        print(f"Error: name `{name}` has `{n_paths}` associated paths ({name_to_paths[name]})")
        exit(-1)

    lookup_fn += f"if (strcmp(\"{name}\", cmap_name) == 0) {{\n        *cmap_path_out = \"{name_to_paths[name][0].as_posix()}\";\n    }} else "

lookup_fn += "{\n        return PDF_ERROR(PDF_ERR_UNKNOWN_CMAP, \"CMap with name `%s` is not a known asset\", cmap_name);\n    }\n\n    return NULL;\n}"
print(lookup_fn)
